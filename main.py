import logging
import smtplib
from email.mime.text import MIMEText
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
import pytz

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = "8281150360:AAEHkDvp9XCWtE9XTNRZfJUE7LA4wILBz2o"
OWNER_ID = 204234630

# Gmail –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
GMAIL = "galmakov@gmail.com"
PASSWORD = "rsil ufnp oosb ilgm"

# –ö–∏—ó–≤—Å—å–∫–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å
KYIV_TZ = pytz.timezone('Europe/Kyiv')

def send_email(text):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∑–≤—ñ—Ç –Ω–∞ –ø–æ—à—Ç—É"""
    try:
        msg = MIMEText(text)
        msg['Subject'] = "üìä –©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç –∑ –≥—Ä—É–ø–∏ –¢–µ–ª–µ–≥—Ä–∞–º—É"
        msg['From'] = GMAIL
        msg['To'] = GMAIL
        
        server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
        server.login(GMAIL, PASSWORD)
        server.send_message(msg)
        server.quit()
        logger.info("‚úÖ Email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
        return True
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ email: {e}")
        return False

def get_report_text():
    """–ì–µ–Ω–µ—Ä—É—î —Ç–µ–∫—Å—Ç –∑–≤—ñ—Ç—É"""
    return (
        "üìä –ó–í–Ü–¢ –ó –ì–†–£–ü–ò: –ß–ê–¢ –†–ê–ù–ö–û–í–û–ì–û –ö–õ–£–ë–£\n\n"
        f"üìÖ –ü–µ—Ä—ñ–æ–¥: {datetime.now(KYIV_TZ).strftime('%d.%m.%Y')}\n\n"
        "‚ú® –ö–û–†–û–¢–ö–ò–ô –í–ò–°–ù–û–í–û–ö:\n"
        "–ì—Ä—É–ø–∞ –∞–∫—Ç–∏–≤–Ω–∞. –û–±–≥–æ–≤–æ—Ä—é—é—Ç—å—Å—è –ø–∏—Ç–∞–Ω–Ω—è —Å–∞–º–æ—Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏.\n\n"
        "üìà –ê–ö–¢–ò–í–ù–Ü–°–¢–¨:\n"
        "‚Ä¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: 0\n"
        "‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤: 0\n\n"
        "üë§ –¢–û–ü –£–ß–ê–°–ù–ò–ö–Ü–í:\n"
        "(–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö)\n\n"
        "üí¨ –í–°–Ü –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø:\n"
        "(–ù–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥)"
    )

async def send_daily_report(application: Application) -> None:
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î —â–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç"""
    report_text = get_report_text()
    
    try:
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
        await application.bot.send_message(chat_id=OWNER_ID, text=report_text)
        logger.info(f"‚úÖ –ó–≤—ñ—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –¢–µ–ª–µ–≥—Ä–∞–º –æ {datetime.now(KYIV_TZ).strftime('%H:%M')}")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≤ –¢–µ–ª–µ–≥—Ä–∞–º: {e}")
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ø–æ—à—Ç—É
    send_email(report_text)

async def report_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /report –¥–ª—è —Ä—É—á–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–≤—ñ—Ç—É"""
    report_text = get_report_text()
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    await update.message.reply_text(report_text)
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ø–æ—à—Ç—É
    send_email(report_text)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await update.message.reply_text(
        "ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø - –±–æ—Ç –¥–ª—è –∑–≤—ñ—Ç—ñ–≤ –≥—Ä—É–ø–∏.\n\n"
        "üìù –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/report - –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç (—Ä—É—á–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞)\n\n"
        "‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —â–æ–¥–Ω—è –æ 5:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º\n"
        "üí™ –ì–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏!"
    )

def main() -> None:
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑—ñ –∑–≤—ñ—Ç–∞–º–∏...")
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –ö–æ–º–∞–Ω–¥–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("report", report_command))
    
    # –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
    scheduler = BackgroundScheduler(timezone=KYIV_TZ)
    scheduler.add_job(
        send_daily_report,
        'cron',
        hour=5,
        minute=0,
        timezone=KYIV_TZ,
        args=[application]
    )
    scheduler.start()
    logger.info("‚è∞ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω–∏–π! –ó–≤—ñ—Ç–∏ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —â–æ–¥–Ω—è –æ 05:00 (–ö–∏—ó–≤)")
    
    logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤–∏–π!")
    application.run_polling(allowed_updates=Update.ALL_TYPES, drop_pending_updates=False)

if __name__ == '__main__':
    main()
